React Native: Learn once, write anywhere - Udemy
https://drive.google.com/drive/folders/1DlXLxoXCUZNZa-P3TA3P8kqeIln3NiIC

Documentación:
- https://create-react-app.dev/docs/getting-started/: Usar npx create-react-app my-app --template typescript
- https://getbootstrap.com/: usar en public/index.html <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-KK94CHFLLe+nY2dmCWGMq91rCGa5gtU4mk92HdvYe+M/SXH301p5ILy+dN9+nJOZ" crossorigin="anonymous">
- https://reactnative.dev/docs/environment-setup?guide=native&os=windows&platform=android: Setting up the development environment


____________________________________________________

Diferencia entre EXPO CLI y ReactNative CLI - Principal: Expo sirve para ambos IOS y Android, con RN hay que usar cosas específicas para IOS.
____________________________________________________

Crear proyecto:

- "npx react-native@latest init AwesomeProject --template react-native-template-typescript"

Ver dispositivos conectados: si ya tengo configurado el emulador en Android Studio y/o conectado el celular por USB (con modo desarrollador USB debugging hablitado), ejecutar: 
- adb devices - muestra los dispositivos conectados

Ejecutar Proyecto: hacerlo desde consola PowerShell como Administrador y usar el comando: 

- "npx react-native run-android" (o "npx react-native start" si da error, y en el menu poner "a" para Android)

Si dice que el puerto está en uso:
- Listar los procesos con: netstat -ano | findstr :8081
- Cerrarlo con: taskkill /PID <PID> /F

____________________________________________________

Componentes:

Los pages, por convención, al ser mobile, se ponen en una carpeta "src/screens"

Algunos componentes por defecto React Native: https://reactnative.dev/docs/components-and-apis 
- View - Es un div: No es obligatorio que el componente esté envuelto en un div (ejemplo: puedo retornar un <Text> solo si quiero), pero es recomendable envolverlo siempre en un div, por si necesito dasle estilos de posicionamiento o fondo, etc.
- Text - Es un p
- Button - No se recomienda usar, porque no se le puede poner style. En lugar usar TouchableOpacity (o sino  TouchableHighlight o TouchableWithoutFeedback).
- TouchableOpacity - Da estilos al hacer click, y dentro se puede poner contenido como View + Text con styles, etc, para, por ejemplo, crear un botón con estilos que yo quiero.

____________________________________________________

Estilos:

Se pone todo por attributo "style" al modo React (objeto literar con camelCase en las variables), pero no hacerlo inline, sino creando un StyleSheet: https://reactnative.dev/docs/stylesheet - Es una abstracción que simula ser un CSS

Se pueden crear varios atributos en el StyleSheet, y a un mismo elemento mandarle un arreglo de atributos, para hacer combinación de estilos, el incluso hacer estilos condicionales. Ejemplo en cmponente Fab: 
style={[
    styles.fabLocation,
    (position === 'left') ? styles.left : styles.right
]}

____________________________________________________

Ejecutar codigo para Plataformas específicas:

Para esto se usa el modulo Platform de react-native: https://reactnative.dev/docs/platform-specific-code#content

import {Platform, StyleSheet} from 'react-native';

// Condicional puntual
const styles = StyleSheet.create({
  height: Platform.OS === 'ios' ? 200 : 100,
});

// O método tipo switch:
const styles = StyleSheet.create({
  container: {
    flex: 1,
    ...Platform.select({
      ios: {
        backgroundColor: 'red',
      },
      android: {
        backgroundColor: 'green',
      },
      default: {
        // other platforms, web for example
        backgroundColor: 'blue',
      },
    }),
  },
});

____________________________________________________

SafeAreaView: https://reactnative.dev/docs/safeareaview

Es un contenedor para que la app use los limites de la pantalla segun el dispositivo (util por ejemplo en celulares que tienen la camara dentro de la pantalla con un borde redondeado - como el motolola de papá -, para que el contenido se muestre debaj de eso).
No conviene ponerlo en la raiz del App, porque si quiero poner un color de fondo por ejemplo no llegaría hasta el borde de la pantalla. Por lo general se usa en el main layout.

____________________________________________________

Diseños Flex:
- https://reactnative.dev/docs/flexbox

* Box Object Model: Alto, ancho, margen, padding, border
* Position: Absoluta, relativa, top, left, right, bottom 
* Flexbox: Dirección, hubicación, alineamiento, estirar, encoger, etc.

